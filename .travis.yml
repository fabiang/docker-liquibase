sudo: required

services:
  - docker

env:
  global:
    - IMAGE_NAME=fabiang/liquibase

before_script:
  - docker pull "$IMAGE_NAME" || true

script:
  - docker build --pull --cache-from "$IMAGE_NAME" --tag "$IMAGE_NAME" .
  - docker run --rm -t --entrypoint /bin/sh "$IMAGE_NAME" liquibase --version
  - |
    docker run --rm -t --entrypoint /bin/sh "$IMAGE_NAME" apk add --update -q file \
        && file /opt/liquibase_extra/liquibase-mssql.jar \
        && file /opt/jdbc_drivers/postgresql.jar \
        && file /opt/jdbc_drivers/mssql-jdbc.jar \
        && file /opt/jdbc_drivers/mysql.jar \
        && bash -c 'o() { type=$(file --brief --mime-type /opt/liquibase_extra/liquibase-mssql.jar); if [[ "$type" == "application/zip" ]]; then return 0; else return 1; fi }; o' \
        && bash -c 'o() { type=$(file --brief --mime-type /opt/jdbc_drivers/postgresql.jar); if [[ "$type" == "application/java-archive" ]]; then return 0; else return 1; fi }; o' \
        && bash -c 'o() { type=$(file --brief --mime-type /opt/jdbc_drivers/mssql-jdbc.jar); if [[ "$type" == "application/zip" ]]; then return 0; else return 1; fi }; o' \
        && bash -c 'o() { type=$(file --brief --mime-type /opt/jdbc_drivers/mysql.jar); if [[ "$type" == "application/java-archive" ]]; then return 0; else return 1; fi }; o'

after_script:
  - docker images

before_deploy:
  - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
  - docker tag "$IMAGE_NAME" "${IMAGE_NAME}:latest"
  - docker tag "$IMAGE_NAME" "${IMAGE_NAME}:3.6"

deploy:
  provider: script
  script: docker push "${IMAGE_NAME}:latest" && docker push "${IMAGE_NAME}:3.6"
  on:
    branch: master
